---
import Icon from "@components/ui/icons/Icon.astro";
// Destructure the properties from Astro.props
const { title, url, noArrow, openInNewTab } = Astro.props;
// Define TypeScript interface for the properties
interface Props {
  title?: string;
  url?: string;
  noArrow?: boolean;
  openInNewTab?: boolean;
}
// Define CSS classes for styling the button
const baseClasses =
  "group inline-flex items-center justify-center gap-x-2 rounded-lg px-4 py-3 text-sm font-bold text-neutral-50 ring-zinc-500 transition duration-300 focus-visible:ring outline-none";
const borderClasses = "border border-transparent";
const bgColorClasses =
  "bg-blue-400 hover:bg-blue-500 active:bg-blue-500 dark:focus:outline-none";
const disableClasses = "disabled:pointer-events-none disabled:opacity-50";
const fontSizeClasses = "2xl:text-base";
const ringClasses = "dark:ring-zinc-200";
---

<!-- Link styled as a button, with dynamic title, URL and optional openInNewTab and arrow -->
<a
  class={`${baseClasses} ${borderClasses} ${bgColorClasses} ${disableClasses} ${fontSizeClasses} ${ringClasses}`}
  href={url}
  target={`${openInNewTab ? "_blank" : "_self"}`}
>
  <!-- opens the url in a new tab based on the openInNewTab property, recommended when the url does not belong to your domain. -->
  {title}
  <!-- Display the arrow based on the 'noArrow' property -->

  {noArrow ? null : <Icon name="arrowRight" />}
</a>
